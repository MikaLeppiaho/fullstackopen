{"version":3,"sources":["services/persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notification","message","NotificationStyle","color","errorCode","background","fontSize","borderStyle","borderRadius","padding","marginBottom","console","log","style","Filter","props","value","onChange","PersonForm","onSubmit","nameChange","nameEvent","numberChange","numberEvent","type","Persons","rows","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","showAll","setShowAll","errorMessage","setErrorMessage","errorColor","setErrorColor","useEffect","personService","initialPersons","filtterPersons","filter","person","name","toLowerCase","indexOf","updateName","changedPerson","find","n","number","window","confirm","returnedNote","setTimeout","map","catch","error","checkDuplicate","nameObject","duplicate","itemId","forEach","item","returnedName","concat","JSON","stringify","e","target","preventDefault","buffer","key","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55e25727.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () =>{\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\nconst create = (newObject) =>{\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\nconst removeName = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\nconst updateName = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll,create,removeName, updateName}","import React from 'react'\r\n\r\nconst Notification = ({ message, errorCode}) =>{\r\n    const NotificationStyle = {\r\n        color: errorCode,\r\n        background: 'lightgrey',\r\n        fontSize: '20px',\r\n        borderStyle: 'solid',\r\n        borderRadius: '5px',\r\n        padding: '10px',\r\n        marginBottom: '10px'\r\n    }\r\n    console.log('ErrorMessage: ',message)\r\n    if (message === null){\r\n        return null\r\n    }\r\n    return(\r\n        <div style={NotificationStyle}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, {useState,useEffect} from 'react'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst Filter = (props) =>{\r\n  \r\n  return(\r\n    <div>\r\n      Filtter users: <input \r\n      value={props.value}\r\n      onChange={props.onChange} \r\n      />\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nconst PersonForm = (props) =>{\r\n  \r\n  return(\r\n    <form onSubmit={props.onSubmit}>\r\n\r\n       <div>\r\n        Name: <input \r\n        value={props.nameChange}\r\n        onChange={props.nameEvent}\r\n        /></div>\r\n        \r\n      <div>\r\n        Number: <input \r\n        value={props.numberChange}\r\n        onChange={props.numberEvent}\r\n        />\r\n      </div>\r\n        <button type='submit'>add</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst Persons = (props) =>{\r\n\r\n  return(\r\n    <ul>\r\n      {props.rows}\r\n    </ul>\r\n     \r\n  )\r\n}\r\n\r\nconst App = () =>{\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [showAll, setShowAll] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [errorColor, setErrorColor] = useState('Green')\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons =>{\r\n        setPersons(initialPersons)\r\n      })\r\n  },[])\r\n\r\n  const addName = (e) => {\r\n    e.preventDefault()//estet채채n sivun uudelleenlataaminen formin l채hetyksess채\r\n    const nameObject ={\r\n      name: newName,\r\n      number: newNumber,\r\n      \r\n    }\r\n    //Katso samanarvoinen nimi ja palauta joko concat tai alert\r\n    const buffer = checkDuplicate(nameObject)\r\n    console.log(\"buffer: \", buffer)\r\n    setNewName('')\r\n    setNewNumber('')\r\n    // else Alert \"That name allready exists\"\r\n    console.log(\"painettu\",e.target)\r\n    console.log(\"Nimiobjekti\",nameObject)\r\n    console.log(\"Lista:\",persons)\r\n  }\r\n\r\n  const deleteName = (e, name) =>{\r\n    if(window.confirm(`Delete ${name}`)){\r\n      personService\r\n      .removeName(e)      \r\n      .then(() =>{\r\n        setErrorMessage('POISTETTUPOISTETTU')\r\n        setErrorColor('Green')\r\n        setTimeout(()=>{\r\n          setErrorMessage(null)\r\n          setErrorColor(null)\r\n        }, 5000)\r\n        setPersons(persons.filter(person => person.id !== e))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(`Information of ${name} has already been removed from server`)\r\n        setErrorColor('Red')\r\n        setTimeout(()=>{\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setPersons(persons.filter(person => person.id !== e))\r\n      })\r\n    }\r\n    }\r\n    \r\n  const handleNameChange = (e) => {\r\n    console.log(e.target.value)\r\n    setNewName(e.target.value)\r\n  }\r\n  const handleNumberChange = (e) =>{\r\n    console.log(\"NumberChange\",e.target.value)\r\n    setNewNumber(e.target.value)\r\n  }\r\n  const handleFiltterchange = (e) => {\r\n    console.log(\"FiltterChange\",e.target.value)\r\n    setShowAll(e.target.value)\r\n  }\r\n\r\n  const filtterPersons = persons.filter((person)=>{\r\n    return person.name.toLowerCase().indexOf(\r\n      showAll.toLowerCase())!== -1\r\n  })\r\n\r\n  const updateName = (id, newNumber,name) =>{\r\n    const person = persons.find(n => n.id === id)\r\n    const changedPerson = {...person, number: newNumber}\r\n\r\n    if(window.confirm(`${name} is already added to phonebook, replace the old number with a new one?`)){\r\n      console.log(`Updated ${id} with ${newNumber}`)\r\n      personService\r\n      .updateName(id, changedPerson)\r\n      .then(returnedNote =>{\r\n        setErrorMessage(`Updated ${changedPerson.name}`)\r\n        setErrorColor('Green')\r\n        setTimeout(()=>{\r\n          setErrorMessage(null)\r\n          setErrorColor(null)\r\n        }, 5000)\r\n        setPersons(persons.map(person => person.id !== id ? person:returnedNote))\r\n    })\r\n    .catch(error => {\r\n      setErrorMessage(`There was an error updating ${changedPerson}`)\r\n      setErrorColor('Red')\r\n      setTimeout(()=>{\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    })\r\n  }}\r\n  const checkDuplicate = (nameObject) => {\r\n    let duplicate = 0\r\n    let itemId = 0\r\n    persons.forEach((item)=>{\r\n      if(item.name===newName){\r\n        itemId = item.id\r\n        duplicate =+1\r\n        console.log(\"error\",duplicate)\r\n      }      \r\n    })\r\n    duplicate === 0 ? \r\n      personService\r\n      .create(nameObject)\r\n      .then(returnedName=>{\r\n        setErrorMessage(`Added ${nameObject.name}`)\r\n        setErrorColor('Green')\r\n        setTimeout(()=>{\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setPersons(persons.concat(returnedName))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(JSON.stringify(error.response.data))\r\n        setErrorColor('Red')\r\n        setTimeout(()=>{\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n      })\r\n      :\r\n      updateName(itemId, nameObject.number,nameObject.name)\r\n    // ---T채m채n tilalle HTTP PUT jos k채ytt채j채 haluaa p채ivitt채채 vanhan numeron--\r\n    //alert(`${newName} is allready added to phonebook`)\r\n    //console.log(\"onko duplicaatti\",isDuplicate)\r\n    //duplicate = 0\r\n    //return isDuplicate\r\n   \r\n  }\r\n\r\n  const rows = () => filtterPersons.map(person => \r\n    <li key={person.id}>\r\n       {person.name} {person.number} \r\n       <button onClick={() => deleteName(person.id, person.name)}>\r\n       delete\r\n       </button>\r\n     </li>\r\n )\r\n\r\n  return(\r\n  <div>\r\n    <h2>Phonebook</h2>\r\n    <Notification message={errorMessage} errorCode={errorColor} />\r\n\r\n    <Filter value={showAll} onChange={handleFiltterchange} />\r\n\r\n    <h3>Add a new</h3>\r\n\r\n    <PersonForm \r\n      onSubmit={addName}\r\n      nameChange={newName}\r\n      nameEvent={handleNameChange}\r\n      numberChange={newNumber}\r\n      numberEvent={handleNumberChange}\r\n    />\r\n\r\n    <h3>Numbers</h3>\r\n    <Persons rows={rows()}/>\r\n  </div>\r\n   \r\n  )\r\n}\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}